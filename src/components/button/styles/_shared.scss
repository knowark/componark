@use 'sass:string';
@use 'base/theme';
@use './config' as *;

@mixin ark-button() {
  user-select: none;
  cursor: pointer;

  display: inline-flex;
  justify-content: center;
  align-items: center;
  text-align: center;

  transition: background 0.5s;

  &:active {
    background-color: silver;
    background-size: 100%;
    transition: background 0s;
  }

  @each $color in theme.$colors {
    &[background=#{$color}] {
      $tone: var(--#{$color}, black);
      background: $tone radial-gradient(circle, transparent 1%, $tone 1%)
        center/15000%;
      color: white;
    }

    &#{&}[color=#{$color}] {
      color: var(--#{$color}, white);
    }
  }

  &__button {
    all: unset;

    width: 100%;
    height: 100%;

    color: inherit;
    background: inherit;

    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;

    border-radius: inherit;
  }

  &:hover {
    filter: contrast(120%) brightness(80%);
  }

  // Fab
  $fab-size: 2.8rem;

  &[fab] {
    border-radius: 50%;
    width: $fab-size;
    height: $fab-size;

    padding: 0.2rem;
    margin: 0;

    z-index: 1024;
    position: fixed;

    min-width: $fab-size;
    min-height: $fab-size;
  }

  // Horizontal
  &[horizontal="center"] {
    left: calc(50vw - (#{$fab-size} / 2));
  }

  &[horizontal="start"] {
    left: calc((#{$fab-size} / 3));
  }

  &[horizontal="end"] {
    right: calc((#{$fab-size} / 3));
  }

  // Vertical
  &[vertical="center"] {
    top: calc(50vh - (#{$fab-size} / 2));
  }

  &[vertical="start"] {
    top: calc((#{$fab-size} / 3));
  }

  &[vertical="end"] {
    bottom: calc((#{$fab-size} / 3));
  }

  // Disabled
  &[disabled] {
    cursor: default;
    pointer-events: none;
    color: gray;
    background: rgba($color: gray, $alpha: 0.1);

  }
}
