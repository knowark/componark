@use 'sass:string';
@use './config' as *;

@mixin ark-button() {

  user-select: none;

  cursor: pointer;

  display: inline-flex;
  justify-content: center;
  align-items: center;
  text-align: center;

  @each $color in $colors {
    &[background=#{$color}] {
      background: var(--#{$color}, black);
      color: white;
    }

    &#{&}[color=#{$color}] {
      color: var(--#{$color}, white);
    }
  }

  min-width: max-content;

  overflow: hidden;

  &__button {
    all: unset;

    width: 100%;
    height: 100%;

    margin: 3px;

    color: inherit;
    background: inherit;

    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;

    border-radius: inherit;

    &:hover {
      filter: brightness(110%);
      color: inherit;
      background: inherit;
    }

    &:focus {
      outline: 1px solid rgba(0, 0, 0, 0.7);
    }
  }

  // Fab

  $fab-size: 2.8rem;

  &[fab] {
    border-radius: 50%;
    width: $fab-size;
    height: $fab-size;

    padding: 0.2rem;
    margin: 0;

    z-index: 1024;
    position: fixed;

    min-width: $fab-size;
    min-height: $fab-size;
  }

  // horizontal
  &[horizontal~="center"] {
    left: calc(50vw - (#{$fab-size} / 2));
  }

  &[horizontal~="start"] {
    left: calc((#{$fab-size} / 3));
  }

  &[horizontal~="end"] {
    right: calc((#{$fab-size} / 3));
  }

  // vertical
  &[vertical~="center"] {
    top: calc(50vh - (#{$fab-size} / 2));
  }

  &[vertical~="start"] {
    top: calc((#{$fab-size} / 3));
  }

  &[vertical~="end"] {
    bottom: calc((#{$fab-size} / 3));
  }

  //  Disabled
  &[disabled] {
    pointer-events: none;
    cursor: default;
    color: gray;
    background: rgba($color: gray, $alpha: 0.1);

    &:hover {
      background: none;
    }
  }

  &::before,
  &::after {
    all: unset;
  }

}
